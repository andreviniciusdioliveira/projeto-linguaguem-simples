import streamlit as st
import fitz  # PyMuPDF
import io
from openai import OpenAI
import re
from datetime import datetime
import time

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Simplificador de Documentos Jur√≠dicos",
    page_icon="‚öñÔ∏è",
    layout="wide"
)

# CSS customizado
st.markdown("""
<style>
    .main-title {
        color: #2E86AB;
        text-align: center;
        padding: 1rem 0;
        border-bottom: 3px solid #A23B72;
        margin-bottom: 2rem;
    }
    .upload-section {
        background-color: #f8f9fa;
        padding: 2rem;
        border-radius: 10px;
        border-left: 5px solid #2E86AB;
        margin: 1rem 0;
    }
    .resultado-section {
        background-color: #ffffff;
        padding: 2rem;
        border-radius: 10px;
        border: 1px solid #e0e0e0;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin: 1rem 0;
    }
</style>
""", unsafe_allow_html=True)

# Prompt aprimorado
PROMPT_SIMPLIFICACAO = """**Papel:** Voc√™ √© um especialista em linguagem simples aplicada ao Poder Judici√°rio, com experi√™ncia em transformar textos jur√≠dicos complexos em comunica√ß√µes claras e acess√≠veis.

**ESTRUTURA DE AN√ÅLISE OBRIGAT√ìRIA:**

## 1. IDENTIFICA√á√ÉO DO DOCUMENTO
- Tipo: [Senten√ßa/Despacho/Decis√£o/Ac√≥rd√£o]
- N√∫mero do processo: [identificar]
- Partes envolvidas: [Autor x R√©u]
- Assunto principal: [identificar]

## 2. AN√ÅLISE DO RESULTADO (MAIS IMPORTANTE)
**ATEN√á√ÉO:** Procure SEMPRE pela se√ß√£o "DISPOSITIVO", "DECIDE", "ANTE O EXPOSTO" ou "DIANTE DO EXPOSTO"

### Identifica√ß√£o do Vencedor:
- ‚úÖ AUTOR GANHOU se encontrar: "JULGO PROCEDENTE", "CONDENO o r√©u/requerido", "DEFIRO"
- ‚ùå AUTOR PERDEU se encontrar: "JULGO IMPROCEDENTE", "CONDENO o autor/requerente", "INDEFIRO"  
- ‚ö†Ô∏è PARCIAL se encontrar: "JULGO PARCIALMENTE PROCEDENTE"

## 3. FORMATA√á√ÉO DA RESPOSTA

### üìä RESUMO EXECUTIVO
[Use sempre um dos √≠cones abaixo]
‚úÖ **VIT√ìRIA TOTAL** - Voc√™ ganhou completamente a causa
‚ùå **DERROTA** - Voc√™ perdeu a causa
‚ö†Ô∏è **VIT√ìRIA PARCIAL** - Voc√™ ganhou parte do que pediu
‚è≥ **AGUARDANDO** - Ainda n√£o h√° decis√£o final
üìã **ANDAMENTO** - Apenas um despacho processual

**Em uma frase:** [Explicar o resultado em linguagem muito simples]

### üìë O QUE ACONTECEU
[Explicar em 3-4 linhas o contexto do processo]

### ‚öñÔ∏è O QUE O JUIZ DECIDIU
[Detalhar a decis√£o em linguagem simples, usando par√°grafos curtos]

### üí∞ VALORES E OBRIGA√á√ïES
‚Ä¢ Valor da causa: R$ [valor]
‚Ä¢ Valores a receber: R$ [detalhar]
‚Ä¢ Valores a pagar: R$ [detalhar]
‚Ä¢ Honor√°rios: [percentual e valor]
‚Ä¢ Custas processuais: [quem paga]

### ‚ö†Ô∏è ATEN√á√ÉO IMPORTANTE
[Alertas sobre prazos cr√≠ticos ou consequ√™ncias]

### üí° DICA PR√ÅTICA
[Sugest√£o de a√ß√£o imediata que a parte pode tomar]

### üìö MINI DICION√ÅRIO DOS TERMOS JUR√çDICOS
[Listar apenas os termos jur√≠dicos que aparecem no texto com explica√ß√£o simples]
‚Ä¢ **Termo 1:** Explica√ß√£o clara e simples
‚Ä¢ **Termo 2:** Explica√ß√£o clara e simples
‚Ä¢ **Termo 3:** Explica√ß√£o clara e simples

---
*Documento processado em: [data/hora]*
*Este √© um resumo simplificado. Consulte seu advogado para orienta√ß√µes espec√≠ficas.*

**REGRAS DE SIMPLIFICA√á√ÉO:**
1. Use frases com m√°ximo 20 palavras
2. Substitua jarg√µes por palavras comuns
3. Explique siglas na primeira vez que aparecem
4. Use exemplos concretos quando poss√≠vel
5. Mantenha tom respeitoso mas acess√≠vel
6. Destaque informa√ß√µes cr√≠ticas com formata√ß√£o

**TEXTO ORIGINAL A SIMPLIFICAR:**
"""

def extrair_texto_pdf(arquivo_pdf):
    """Extrai texto de um arquivo PDF"""
    try:
        doc = fitz.open(stream=arquivo_pdf.read(), filetype="pdf")
        texto_completo = ""
        
        for pagina_num in range(len(doc)):
            pagina = doc.load_page(pagina_num)
            texto = pagina.get_text()
            texto_completo += texto + "\n"
        
        doc.close()
        return texto_completo
    except Exception as e:
        st.error(f"Erro ao extrair texto do PDF: {str(e)}")
        return None

def limpar_texto(texto):
    """Limpa e formata o texto extra√≠do"""
    if not texto:
        return ""
    
    # Remove caracteres especiais problem√°ticos
    texto = re.sub(r'[^\w\s\-.,;:!?()[\]{}/"\'@#$%&*+=<>]', ' ', texto)
    
    # Normaliza espa√ßos em branco
    texto = re.sub(r'\s+', ' ', texto)
    
    # Remove linhas muito curtas que podem ser ru√≠do
    linhas = texto.split('\n')
    linhas_filtradas = [linha.strip() for linha in linhas if len(linha.strip()) > 3]
    
    return '\n'.join(linhas_filtradas)

def simplificar_documento(texto, api_key):
    """Usa OpenAI para simplificar o documento jur√≠dico"""
    try:
        client = OpenAI(api_key=api_key)
        
        # Limita o texto se for muito longo
        if len(texto) > 12000:  # Limite conservador
            texto = texto[:12000] + "..."
            st.warning("‚ö†Ô∏è Documento muito longo. Processando apenas os primeiros 12.000 caracteres.")
        
        prompt_completo = PROMPT_SIMPLIFICACAO + texto
        
        with st.spinner('ü§ñ Analisando documento...'):
            response = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[
                    {"role": "system", "content": "Voc√™ √© um especialista em simplifica√ß√£o de documentos jur√≠dicos."},
                    {"role": "user", "content": prompt_completo}
                ],
                max_tokens=2500,
                temperature=0.1
            )
        
        return response.choices[0].message.content
    
    except Exception as e:
        st.error(f"Erro ao processar com OpenAI: {str(e)}")
        return None

def main():
    # T√≠tulo principal
    st.markdown('<h1 class="main-title">‚öñÔ∏è Simplificador de Documentos Jur√≠dicos</h1>', unsafe_allow_html=True)
    
    # Descri√ß√£o
    st.markdown("""
    <div style="text-align: center; color: #666; margin-bottom: 2rem;">
        Transforme documentos jur√≠dicos complexos em textos claros e compreens√≠veis
    </div>
    """, unsafe_allow_html=True)
    
    # Se√ß√£o de configura√ß√£o da API
    with st.sidebar:
        st.header("üîß Configura√ß√µes")
        api_key = st.text_input(
            "Chave da API OpenAI",
            type="password",
            help="Insira sua chave da API do OpenAI"
        )
        
        if not api_key:
            st.warning("‚ö†Ô∏è Insira sua chave da API para continuar")
            st.markdown("""
            **Como obter sua chave da API:**
            1. Acesse [platform.openai.com](https://platform.openai.com)
            2. Fa√ßa login na sua conta
            3. V√° em "API Keys"
            4. Clique em "Create new secret key"
            """)
        
        st.markdown("---")
        st.markdown("""
        **üìã Tipos de documentos suportados:**
        - ‚úÖ Senten√ßas
        - ‚úÖ Decis√µes
        - ‚úÖ Despachos
        - ‚úÖ Ac√≥rd√£os
        - ‚úÖ Outros documentos judiciais
        """)
        
        st.markdown("---")
        st.markdown("""
        **üõ°Ô∏è Seguran√ßa:**
        - Seus dados n√£o s√£o armazenados
        - Processamento seguro
        - API key criptografada
        """)
    
    # Interface principal
    col1, col2 = st.columns([1, 1])
    
    with col1:
        st.markdown('<div class="upload-section">', unsafe_allow_html=True)
        st.subheader("üìÑ Upload do Documento")
        
        arquivo_pdf = st.file_uploader(
            "Selecione o arquivo PDF",
            type=['pdf'],
            help="Fa√ßa upload de um documento jur√≠dico em PDF"
        )
        
        if arquivo_pdf is not None:
            st.success(f"‚úÖ Arquivo carregado: {arquivo_pdf.name}")
            st.info(f"üìä Tamanho: {arquivo_pdf.size / 1024:.1f} KB")
            
            if st.button("üöÄ Processar Documento", type="primary", use_container_width=True):
                if not api_key:
                    st.error("‚ùå Por favor, insira sua chave da API OpenAI")
                else:
                    # Processa o documento
                    with st.spinner("üìñ Extraindo texto do PDF..."):
                        texto_extraido = extrair_texto_pdf(arquivo_pdf)
                    
                    if texto_extraido:
                        texto_limpo = limpar_texto(texto_extraido)
                        
                        if len(texto_limpo.strip()) < 100:
                            st.error("‚ùå Texto muito curto ou n√£o foi poss√≠vel extrair conte√∫do suficiente do PDF")
                        else:
                            # Simplifica o documento
                            resultado = simplificar_documento(texto_limpo, api_key)
                            
                            if resultado:
                                # Salva o resultado na sess√£o
                                st.session_state['resultado'] = resultado
                                st.session_state['nome_arquivo'] = arquivo_pdf.name
                                st.success("‚úÖ Documento processado com sucesso!")
                            else:
                                st.error("‚ùå Erro ao processar o documento")
                    else:
                        st.error("‚ùå Erro ao extrair texto do PDF")
        
        st.markdown('</div>', unsafe_allow_html=True)
        
        # Se√ß√£o de exemplo
        with st.expander("üìñ Ver exemplo de resultado"):
            st.markdown("""
            **Exemplo de sa√≠da simplificada:**
            
            ### üìä RESUMO EXECUTIVO
            ‚úÖ **VIT√ìRIA TOTAL** - Voc√™ ganhou completamente a causa
            
            **Em uma frase:** O juiz decidiu que a empresa deve pagar R$ 50.000 de danos morais.
            
            ### üìë O QUE ACONTECEU
            Jo√£o processou a empresa XYZ porque teve seu nome negativado indevidamente...
            
            ### üìö MINI DICION√ÅRIO DOS TERMOS JUR√çDICOS
            ‚Ä¢ **Danos morais:** Compensa√ß√£o em dinheiro por sofrimento emocional
            ‚Ä¢ **Tutela antecipada:** Decis√£o r√°pida antes do final do processo
            """)
    
    with col2:
        if 'resultado' in st.session_state:
            st.markdown('<div class="resultado-section">', unsafe_allow_html=True)
            st.subheader(f"üìã Resultado - {st.session_state.get('nome_arquivo', 'Documento')}")
            
            # Resultado simplificado
            st.markdown(st.session_state['resultado'])
            
            # Bot√µes de a√ß√£o
            col_download, col_limpar = st.columns(2)
            
            with col_download:
                # Bot√£o de download
                timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                nome_download = f"documento_simplificado_{timestamp}.txt"
                
                st.download_button(
                    label="üíæ Baixar Resultado",
                    data=st.session_state['resultado'],
                    file_name=nome_download,
                    mime="text/plain",
                    use_container_width=True
                )
            
            with col_limpar:
                if st.button("üóëÔ∏è Limpar Resultado", use_container_width=True):
                    del st.session_state['resultado']
                    if 'nome_arquivo' in st.session_state:
                        del st.session_state['nome_arquivo']
                    st.rerun()
            
            st.markdown('</div>', unsafe_allow_html=True)
        else:
            st.markdown("""
            <div style="text-align: center; padding: 4rem 2rem; color: #666;">
                <h3>üìã Resultado aparecer√° aqui</h3>
                <p>Fa√ßa upload de um documento PDF e clique em "Processar" para ver a simplifica√ß√£o</p>
            </div>
            """, unsafe_allow_html=True)
    
    # Rodap√©
    st.markdown("---")
    st.markdown("""
    <div style="text-align: center; color: #666; font-size: 0.8em;">
        <p>‚öñÔ∏è Simplificador de Documentos Jur√≠dicos | 
        Desenvolvido para tornar o direito mais acess√≠vel | 
        Vers√£o 2.0</p>
        <p><strong>Importante:</strong> Este √© um resumo automatizado. 
        Sempre consulte um advogado para orienta√ß√µes espec√≠ficas sobre seu caso.</p>
    </div>
    """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()
